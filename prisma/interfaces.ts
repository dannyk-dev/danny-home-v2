// This file was auto-generated by prisma-generator-typescript-interfaces

export type Role = "ADMIN" | "CUSTOMER";

export type Currency = "BRL" | "USD" | "EUR";

export type OrderStatus = "PENDING" | "PAID" | "SHIPPED" | "DELIVERED" | "CANCELLED" | "REFUNDED";

export type PaymentStatus = "PENDING" | "AUTHORIZED" | "CAPTURED" | "REFUNDED" | "FAILED";

export type DiscountType = "FIXED" | "PERCENT";

export type PromoType = "COUPON" | "AUTOMATIC";

export type BannerPos = "HERO" | "SIDEBAR" | "FOOTER";

export type CartStatus = "ACTIVE" | "ABANDONED" | "CONVERTED";

export type StockReason = "MANUAL" | "SALE" | "RESTOCK" | "RETURN" | "ADJUSTMENT";

export interface Attachment {
  id: string;
  filename: string;
  mimeType: string;
  size: number;
  data: Uint8Array;
  uploaderId: string | null;
  uploader?: User | null;
  products?: Product[];
  banners?: Banner[];
  categories?: Category[];
  subCategories?: SubCategory[];
  createdAt: Date;
  User?: User[];
}

export interface Account {
  id: string;
  userId: string;
  type: string;
  provider: string;
  providerAccountId: string;
  refresh_token: string | null;
  access_token: string | null;
  expires_at: number | null;
  token_type: string | null;
  scope: string | null;
  id_token: string | null;
  session_state: string | null;
  refresh_token_expires_in: number | null;
  user?: User;
}

export interface Session {
  id: string;
  sessionToken: string;
  userId: string;
  expires: Date;
  user?: User;
}

export interface VerificationToken {
  identifier: string;
  token: string;
  expires: Date;
}

export interface User {
  id: string;
  name: string | null;
  email: string | null;
  emailVerified: Date | null;
  phone: string | null;
  role: Role;
  avatarId: string | null;
  avatar?: Attachment | null;
  attachments?: Attachment[];
  accounts?: Account[];
  sessions?: Session[];
  orders?: Order[];
  addresses?: Address[];
  carts?: Cart[];
  wishlists?: Wishlist[];
  reviews?: ProductReview[];
  eventLogs?: EventLog[];
  image: string | null;
  createdAt: Date;
  updatedAt: Date;
  InventoryStock?: InventoryStock[];
}

export interface Category {
  id: string;
  name: string;
  slug: string;
  description: string | null;
  metaTitle: string | null;
  metaDescription: string | null;
  parentId: string | null;
  parent?: Category | null;
  children?: Category[];
  promotions?: Promotion[];
  subcategories?: SubCategory[];
  createdAt: Date;
  updatedAt: Date;
  attachmentId: string | null;
  attachments?: Attachment | null;
}

export interface SubCategory {
  id: string;
  name: string;
  slug: string;
  description: string | null;
  metaTitle: string | null;
  metaDescription: string | null;
  categoryId: string;
  category?: Category;
  products?: Product[];
  attachmentId: string | null;
  attachments?: Attachment | null;
  createdAt: Date;
  updatedAt: Date;
}

export interface Product {
  id: string;
  name: string;
  slug: string;
  description: string | null;
  richDesc: JsonValue | null;
  brand: string | null;
  metaTitle: string | null;
  metaDescription: string | null;
  ratingAvg: number;
  ratingCount: number;
  taxable: boolean;
  attachments?: Attachment[];
  subCategoryId: string;
  subCategory?: SubCategory;
  variants?: ProductVariant[];
  promotions?: Promotion[];
  reviews?: ProductReview[];
  wishlistItems?: WishlistItem[];
  defaultPrice: Decimal;
  currency: Currency;
  active: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface ProductVariant {
  id: string;
  productId: string;
  sku: string;
  barcode: string | null;
  ean: string | null;
  product?: Product;
  orderItems?: OrderItem[];
  cartItems?: CartItem[];
  stockLedgers?: InventoryStock[];
  price: Decimal;
  currency: Currency;
  stock: number;
  attributes: JsonValue | null;
  weightGrams: number | null;
  widthMm: number | null;
  heightMm: number | null;
  lengthMm: number | null;
  active: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface Promotion {
  id: string;
  name: string;
  code: string | null;
  type: PromoType;
  discountType: DiscountType;
  value: Decimal;
  maxUses: number | null;
  usageCount: number;
  perUserLimit: number | null;
  startsAt: Date;
  endsAt: Date;
  active: boolean;
  products?: Product[];
  categories?: Category[];
  orders?: Order[];
  createdAt: Date;
  updatedAt: Date;
}

export interface Banner {
  id: string;
  title: string | null;
  position: BannerPos;
  order: number;
  linkUrl: string | null;
  startsAt: Date | null;
  endsAt: Date | null;
  active: boolean;
  attachmentId: string | null;
  attachment?: Attachment | null;
  createdAt: Date;
  updatedAt: Date;
}

export interface Cart {
  id: string;
  userId: string | null;
  status: CartStatus;
  currency: Currency;
  user?: User | null;
  items?: CartItem[];
  createdAt: Date;
  updatedAt: Date;
}

export interface CartItem {
  id: string;
  cartId: string;
  productVariantId: string;
  quantity: number;
  unitPrice: Decimal;
  currency: Currency;
  cart?: Cart;
  variant?: ProductVariant;
}

export interface Wishlist {
  id: string;
  userId: string;
  user?: User;
  items?: WishlistItem[];
  createdAt: Date;
  updatedAt: Date;
}

export interface WishlistItem {
  id: string;
  wishlistId: string;
  productId: string;
  addedAt: Date;
  wishlist?: Wishlist;
  product?: Product;
}

export interface ProductReview {
  id: string;
  productId: string;
  userId: string;
  rating: number;
  title: string | null;
  comment: string | null;
  approved: boolean;
  product?: Product;
  user?: User;
  createdAt: Date;
  updatedAt: Date;
}

export interface InventoryStock {
  id: string;
  productVariantId: string;
  change: number;
  reason: StockReason;
  note: string | null;
  snapshotAfter: number;
  createdByUserId: string | null;
  variant?: ProductVariant;
  createdBy?: User | null;
  createdAt: Date;
}

export interface ShippingMethod {
  id: string;
  name: string;
  carrier: string | null;
  flatRate: Decimal;
  perKgRate: Decimal | null;
  currency: Currency;
  active: boolean;
  orders?: Order[];
}

export interface Payment {
  id: string;
  orderId: string;
  amount: Decimal;
  currency: Currency;
  method: string;
  status: PaymentStatus;
  gateway: string | null;
  transactionId: string | null;
  processedAt: Date | null;
  meta: JsonValue | null;
  order?: Order;
  createdAt: Date;
  updatedAt: Date;
}

export interface Order {
  id: string;
  userId: string;
  status: OrderStatus;
  total: Decimal;
  currency: Currency;
  promotionId: string | null;
  shippingMethodId: string | null;
  shippingCost: Decimal;
  taxAmount: Decimal;
  paymentStatus: PaymentStatus;
  trackingNumber: string | null;
  user?: User;
  promotion?: Promotion | null;
  shippingMethod?: ShippingMethod | null;
  items?: OrderItem[];
  payments?: Payment[];
  shippingAddressId: string | null;
  shippingAddress?: Address | null;
  billingAddressId: string | null;
  billingAddress?: Address | null;
  meta: JsonValue | null;
  placedAt: Date;
  updatedAt: Date;
}

export interface OrderItem {
  id: string;
  orderId: string;
  productVariantId: string;
  quantity: number;
  unitPrice: Decimal;
  currency: Currency;
  total: Decimal;
  order?: Order;
  productVariant?: ProductVariant;
}

export interface Address {
  id: string;
  userId: string | null;
  name: string | null;
  line1: string;
  line2: string | null;
  city: string;
  state: string | null;
  postalCode: string;
  country: string;
  phone: string | null;
  isDefault: boolean;
  user?: User | null;
  shippingOrders?: Order[];
  billingOrders?: Order[];
}

export interface StoreSetting {
  id: string;
  key: string;
  value: JsonValue;
  updatedAt: Date;
}

export interface EventLog {
  id: string;
  userId: string | null;
  type: string;
  payload: JsonValue | null;
  createdAt: Date;
  user?: User | null;
}

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | Array<JsonValue> | null;

type Decimal = { valueOf(): string };
